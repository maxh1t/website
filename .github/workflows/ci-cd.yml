name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - '*'

jobs:
  install:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4

      - name: Use Node.js 20
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Use PNPM
        uses: pnpm/action-setup@v4
        id: pnpm-install

      - name: Get pnpm store directory
        id: pnpm-cache
        run: |
          echo "pnpm_cache_dir=$(pnpm store path)" >> $GITHUB_OUTPUT

      - uses: actions/cache@v4
        name: Setup pnpm cache
        with:
          path: ${{ steps.pnpm-cache.outputs.pnpm_cache_dir }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install

#  lint:
#    runs-on: ubuntu-latest
#    needs: install
#    steps:
#      - name: Checkout code
#        uses: actions/checkout@v4
#
#      - name: Use Node.js 20
#        uses: actions/setup-node@v4
#        with:
#          node-version: 20
#
#      - name: Use PNPM
#        uses: pnpm/action-setup@v4
#        id: pnpm-install
#        with:
#          run_install: true
#
#      - name: Run lint
#        run: pnpm lint
#
#  types:
#    runs-on: ubuntu-latest
#    needs: install
#    steps:
#      - name: Checkout code
#        uses: actions/checkout@v4
#
#      - name: Use Node.js 20
#        uses: actions/setup-node@v4
#        with:
#          node-version: 20
#
#      - name: Use PNPM
#        uses: pnpm/action-setup@v4
#        id: pnpm-install
#        with:
#          run_install: true
#
#      - name: Run type-check
#        run: pnpm types

  build:
    runs-on: ubuntu-latest
#    needs: [ lint, types ]
    needs: install
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Use Node.js 20
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Use PNPM
        uses: pnpm/action-setup@v4
        id: pnpm-install
        with:
          run_install: true

      - name: Cache .next/cache
        uses: actions/cache@v4
        with:
          path: .next/cache
          key: ${{ runner.os }}-next-cache-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-next-cache-

      - name: Build App
        run: pnpm build

      - name: Move .next to next directory
        run: |
          mkdir -p next
          mv .next/* next/

      - name: List files after build (debugging)
        run: ls -al

      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: app-build
          path: next/

  docker_image:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Use Node.js 20
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Use PNPM
        uses: pnpm/action-setup@v4
        id: pnpm-install
        with:
          run_install: true

      - name: Download .next artifact
        uses: actions/download-artifact@v4
        with:
          name: app-build
          path: .next/

      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKER_HUB_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_HUB_USERNAME }}" --password-stdin

      - name: Build Docker image
        run: docker build -t ${{ secrets.DOCKER_HUB_USERNAME }}/website:latest .

      - name: Push Docker image
        run: docker push ${{ secrets.DOCKER_HUB_USERNAME }}/website:latest